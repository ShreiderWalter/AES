#include <stdio.h>
#include <string.h>
#include <stdint.h>
#include <iostream>
#include <vector>
#include "aes.h"

static void phex(uint8_t* str);
static uint8_t* test_encrypt_ecb(void);
static void test_decrypt_ecb(uint8_t*);


int main(void)
{
    //auto inc = test_encrypt_ecb();
    uint8_t inc[]  = {0xc0, 0xc1, 0x1b, 0xce, 0x8b, 0x55, 0xb7, 0x31, 0xaf, 0x68, 0xb3, 0x29, 0x72, 0xe8, 0x41, 0x38};
    test_decrypt_ecb(inc);

    return 0;
}



// prints string as hex
static void phex(uint8_t* str)
{
    unsigned char i;
    for(i = 0; i < 16; ++i)
        printf("%.2x", str[i]);
    printf("\n");
}

static uint8_t* test_encrypt_ecb(void)
{
    uint8_t key[] = {0x0c, 0x12, 0x0a, 0x11, 0x14, 0x10, 0x13, 0x0a, 0x13, 0x14, 0x06, 0x0e, 0x01, 0x01, 0x06, 0x13};
    uint8_t in[]  = {0x13, 0x01, 0x0e, 0x10, 0x0d, 0x07, 0x14, 0x10, 0x13, 0x14, 0x12, 0x10, 0x06, 0x0f, 0x0a, 0x06};
    //uint8_t out[] = {0x3a, 0xd7, 0x7b, 0xb4, 0x0d, 0x7a, 0x36, 0x60, 0xa8, 0x9e, 0xca, 0xf3, 0x24, 0x66, 0xef, 0x97};
    uint8_t buffer[16];

    AES128_ECB_encrypt(in, key, buffer);
    uint8_t* output = new uint8_t[16];
    for(size_t i = 0; i < 16; ++i)
    {
        output[i] = buffer[i];
    }
    return output;
}

static void test_decrypt_ecb(uint8_t* in)
{
    uint8_t key[] = {0x0c, 0x12, 0x0a, 0x11, 0x14, 0x10, 0x13, 0x0a, 0x13, 0x14, 0x06, 0x0e, 0x01, 0x01, 0x06, 0x13};
    //uint8_t key[] = {0xd0, 0xba, 0xd1, 0x80, 0xd0, 0xb8, 0xd0, 0xbf, 0xd1, 0x82, 0xd0, 0xbe, 0xd1, 0x81, 0xd0, 0xb8};
    //uint8_t key[] = {0x2b, 0x7e, 0x15, 0x16, 0x28, 0xae, 0xd2, 0xa6, 0xab, 0xf7, 0x15, 0x88, 0x09, 0xcf, 0x4f, 0x3c};
//    uint8_t in[]  = {0xc0, 0x8b, 0xaf, 0x72, 0xc1, 0x55, 0x68, 0xe8, 0x1b, 0xb7, 0xb3, 0x41, 0xce, 0x31, 0x29, 0x38};
    uint8_t buffer[16];

    AES128_ECB_decrypt(in, key, buffer);

    printf("ECB decrypt: ");

    for(size_t i = 0; i < 16; ++i)
    {
        std::cout << std::hex << (int)buffer[i] << "\t";
    }
//    unsigned char reading[16] = {0x5a, 0x78, 0x40, 0x9b, 0xb0, 0x6b, 0xbf, 0xbe,
//                                0x26, 0x93, 0xe4, 0x90, 0x1c, 0x97, 0xb7, 0xc7};
//    char temp[16];
//    sprintf(temp, "%x", reading[0]);
//    printf("oth: %s\n", temp);
}
